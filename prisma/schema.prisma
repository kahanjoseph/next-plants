// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  image     String
  createdAt DateTime @default(now())
}

model Family {
  id        Int      @id @default(autoincrement())
  name      String @unique
  species   Species[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Species {
  id        Int      @id @default(autoincrement())
  name      String
  familyId  Int
  family    Family   @relation(fields: [familyId], references: [id])
  plants    Plant[]
  cultivars Cultivar[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([familyId, name]) // Compound unique constraint
}

model Plant {
  id         Int        @id @default(autoincrement())
  name       String?
  speciesId  Int
  species    Species    @relation(fields: [speciesId], references: [id])
  cultivars  Cultivar[] @relation("PlantCultivars") //
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  datePlanted DateTime
  notes String?
}

model Cultivar {
  id        Int      @id @default(autoincrement())
  name      String
  speciesId   Int
  species   Species    @relation(fields: [speciesId], references: [id])
  plants    Plant[]    @relation("PlantCultivars") //
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([speciesId, name]) // Compound unique constraint
}
